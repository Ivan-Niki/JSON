
========= JSON: что это как с ним работать =========

JSON (JavaScript Object Notation) — стандартный текстовый формат для хранения и передачи структурированных 
данных. Он основан на синтаксисе объекта в JavaScript, но не привязан к нему. Работу с ним поддерживают многие 
современные языки программирования: Python, Java и другие.

Основа JSON — это синтаксис объектов JavaScript, которые используются в языке для представления данных. 
Данные в формате JSON хранятся как пары «ключ:значение» и упорядоченные списки.

Значениями в JSON могут быть:
-> JSON-объекты — неупорядоченные множества пар «ключ:значение», разделенные запятыми;
-> массивы — упорядоченные коллекции значений, заключенные в квадратные скобки, значения разделены запятыми;
-> числа — целые или с плавающей запятой;
-> логический тип данных (булевые значения) — true и false;
-> строки — заданные последовательности из символов Юникода (стандарт кодирования символов), заключенные в две двойные кавычки;
-> значение Null — показывает отсутствие информации.

----- Структура JSON -----
JSON-файл — это строка. Для работы с данными в этом формате нужно использовать методы глобального объекта JSON.
Синтаксис JSON повторяет синтаксис обычного объекта в JavaScript: данные записываются в виде пар «ключ — значение» и разделяются запятыми.
Ключи — строковые переменные, а значения могут быть строками, числами, булевыми значениями, объектами, 
массивами или null. Функции и даты в обычном JSON не поддерживаются.

Вот как выглядит простой JSON-файл:
//ключ    // значение
{
  "name": "John Smith",
  "age": 37
}

Чтобы отправить по сети объект JavaScript, его нужно преобразовать в JSON (строку). 
Для этого используется метод stringify(), который принимает объект в качестве параметра и возвращает строку JSON.

let student = {
name: ‘Max’,
age: 28,
isAdmin: false,
courses: [‘html’, ‘css’, ‘js’],
wife: null
};
let json = JSON.stringify(student);
alert(json);

/* выведет объект в формате JSON:
{
«name»: «Max»,
«age»: 28,
«isAdmin»: false,
«courses»: [«html», «css», «js»],
«wife»: null
}

*/

Для превращения данных, полученных в JSON-формате от сервера, в объект JavaScript применяется метод parse(). 
Он работает по аналогии со stringify(), принимая строку в качестве аргумента и возвращая объект.

Общие правила создания JSON-файла описывает RFC-стандарт:
-> данные записаны в виде пар «ключ:значение»;
-> данные разделены запятыми;
-> объект находится внутри фигурных скобок {};
-> массив находится внутри квадратных скобок [].

Есть и другие моменты:
-> В JSON-формате используют двойные кавычки (“), одиночные кавычки (‘) не подходят. Но кавычки не нужны для 
любых значений, не являющихся строкой, — чисел, массивов, булевых значений.
-> Одна лишняя или пропущенная запятая или скобка могут привести к сбою работы JSON-файла.
-> JSON-формат не поддерживает комментарии. Добавление комментария вызовет ошибку.
-> Автоматически сгенерированный JSON-файл не должен содержать ошибок, его лучше тоже проверить с помощью валидатора JSONLint.

--------- Объекты и массивы JSON ---------
Для хранения данных в JSON используются две структуры — объекты и массивы.

Объекты — неупорядоченная коллекция. Для них не принципиально в каком порядке следуют пары «ключ — значение». 
То есть их можно менять местами. Но будьте осторожны! Когда разработчик перемещает пару «ключ — значение» с 
любого места на последнюю, часто забывает удалить запятую, что приводит к ошибке.

Объект JSON очень похож на объект в JavaScript, но ключ всегда должен быть в кавычках. Например:

{
	"name": "Иван",
	"age": 34,
	"married": true
}

Массивы — упорядоченный список значений. Выглядят они так:

[
    "яблоко",
    "персик",
    "банан",
    "киви"
]

В отличие от объекта, порядок элементов в массиве важен. Тут нет ключей, поэтому обращаться к значениям мы можем 
только по индексу элемента. Важно помнить, что у первого элемента индекс 0.
Объекты и массивы могут быть вложены друг в друга, а количество уровней вложенности не ограничено.

--------- Что такое JSON5 ---------
JSON5 — это расширение стандарта JSON, повышающее читаемость и удобство написания JSON-данных. 
Кроме этого, он добавляет новые возможности, например использование комментариев, которых нет в самом стандарте.

Главные отличия JSON5, полезные в работе:

1) Допустимы комментарии:

{
// Это комментарий
}

2) Необязательно использовать кавычки для ключей, но только в том случае, если ключ состоит из букв, цифр или 
знаков подчёркивания и не является зарезервированным словом:

{ key: "value", // Ключ без кавычек
}

3) Есть специальный формат для дат и времени:

{ date: new Date(), // Значение-дата
}


